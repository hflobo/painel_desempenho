{"version":3,"sources":["webpack:///src/scss/components/_tabs.scss","webpack:///src/scss/functions/_var.scss","webpack:///src/scss/components/tabs.entry.scss","webpack:///node_modules/bootstrap/scss/mixins/_breakpoints.scss"],"names":[],"mappings":"AACA;EAIQ,sCCAoB;ACH5B;;AFDA;EAQc,sCCN4B;EDO5B,8CCP4B;EDQ5B,gDCR4B;EDS5B,8CCT4B;EDU5B,qBAAqB;EACrB,mBAAmB;AEHjC;;AFVA;EAgBc,6CCd4B;EDe5B,4CCf4B;EDgB5B,kBAAkB;EAClB,SAAS;EACT,OAAO;AEFrB;;AFlBA;EAsBgB,4CCpB0B;EDqB1B,qBAAqB;EACrB,8CCtB0B;EDuB1B,8CCvB0B;EDwB1B,oCCtBY;ACsB5B;;AF1BA;EAoCM,wDClCoC;EDmCpC,aAAa;EACb,UAAU;EACV,wCCnCsB;EDoCtB,aAAa;AENnB;;AFlCA;EA0CQ,aAAa;EACb,mBAAmB;EACnB,uBAAuB;EACvB,kCCzCoB;ED0CpB,kBAAkB;EAClB,mBAAmB;AEJ3B;;AF3CA;EAiDU,eAAe;AEFzB;;AF/CA;EAoDU,gBAAgB;AED1B;;AFnDA;EAwDY,8DCtD8B;EDwD9B,yCCtDgB;ACoD5B;;AFxDA;EA4Dc,8CC1D4B;AC0D1C;;AF5DA;EAgEY,4CC9D8B;AC8D1C;;AFhEA;EAoEU,6BAA6B;EAC7B,YAAY;EACZ,oCAAoC;EACpC,sCCrEgC;EDsEhC,qBAAqB;EACrB,0DCrEkB;ACqE5B;;AFzEA;EA2EY,yDCzE8B;AC2E1C;;AF7EA;EAgFc,4CC9E4B;AC+E1C;;AFjFA;EAoFY,yCAAyC;AECrD;;AFrFA;EAsFc,4CCpF4B;ACuF1C;;AFzFA;EA0FY,sCCxF8B;EDyF9B,6CCzF8B;ED0F9B,8CC1F8B;ED2F9B,kBAAkB;EAClB,mBAAmB;AEG/B;;AFjGA;EAkGU,sCChGgC;EDiGhC,aAAa;EACb,4CClGgC;EDmGhC,8CCnGgC;EDoGhC,uBAAuB;EACvB,kBAAkB;EAClB,SAAS;AEGnB;;ACnCI;EHxEJ;IA6GM,WAAW;IACX,gBAAgB;IAChB,aAAa;EEGjB;AACF;;AFnHA;EAoHM,aAAa;AEGnB;;AFvHA;EAsHQ,cAAc;AEKtB","file":"css/components/tabs.css","sourcesContent":["// Lista de Itens de Abas\n.#{$prefix}tabs {\n  &[data-counter=\"true\"] {\n    .tab-nav {\n      ul {\n        margin-bottom: v(spacing-scale-9x);\n        .tab-item {\n          &[not-tab=\"true\"] {\n            .name {\n              color: v(color-secondary-07, $color-secondary-07);\n              font-size: v(font-size-scale-up-03, $font-size-scale-up-03);\n              line-height: v(font-size-scale-up-03, $font-size-scale-up-03);\n              font-weight: v(font-weight-semi-bold, $font-weight-semi-bold);\n              display: inline-block;\n              padding-bottom: 6px;\n            }\n            .outcome {\n              font-size: v(font-size-scale-up-02, $font-size-scale-up-02);\n              font-weight: v(font-weight-regular, $font-weight-regular);\n              position: absolute;\n              top: 52px;\n              left: 0;\n              span {\n                color: v(color-primary-default, $color-primary-default);\n                display: inline-block;\n                font-size: v(font-size-scale-up-03, $font-size-scale-up-03);\n                font-weight: v(font-weight-semi-bold, $font-weight-semi-bold);\n                margin-left: v(spacing-scale-3x);\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  .tab-nav {\n    ul {\n      border-bottom: 1px solid v(color-secondary-04, $color-secondary-04);\n      display: flex;\n      padding: 0;\n      margin-bottom: v(spacing-scale-base);\n      margin-top: 0;\n      .tab-item {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        padding: 0 v(spacing-scale-3x);\n        position: relative;\n        white-space: nowrap;\n        &:first-child {\n          padding-left: 0;\n        }\n        &:last-child {\n          padding-right: 0;\n        }\n        &.is-active {\n          button {\n            border-bottom: 4px solid\n              v(color-primary-default, $color-primary-default);\n            padding-bottom: v(spacing-scale-base);\n            .name {\n              color: v(color-primary-darken-02, $color-primary-darken-02);\n            }\n          }\n          .results {\n            color: v(color-primary-default, $color-primary-default);\n          }\n        }\n        button {\n          background-color: transparent;\n          border: none;\n          border-bottom: 4px solid transparent;\n          color: v(color-secondary-07, $color-secondary-07);\n          display: inline-block;\n          padding: v(spacing-scale-base) v(spacing-scale-3x);\n          &:hover {\n            background-color: v(\n              color-primary-pastel-02,\n              $color-primary-pastel-02\n            );\n            .name {\n              color: v(color-primary-default, $color-primary-default);\n            }\n          }\n          &:focus {\n            background-color: rgba(242, 227, 23, 0.3);\n            .name {\n              color: v(color-primary-default, $color-primary-default);\n            }\n          }\n          .name {\n            color: v(color-secondary-07, $color-secondary-07);\n            font-size: v(font-size-scale-up-02, $font-size-scale-up-02);\n            font-weight: v(font-weight-semi-bold, $font-weight-semi-bold);\n            text-align: center;\n            white-space: nowrap;\n          }\n        }\n        .results {\n          color: v(color-secondary-07, $color-secondary-07);\n          display: flex;\n          font-size: v(font-size-scale-base, $font-size-scale-base);\n          font-weight: v(font-weight-semi-bold, $font-weight-semi-bold);\n          justify-content: center;\n          position: absolute;\n          top: 60px;\n        }\n      }\n    }\n    @include media-breakpoint-down(sm) {\n      width: 100%;\n      overflow-x: auto;\n      display: flex;\n    }\n  }\n  .tab-content {\n    .tab-panel {\n      display: none;\n      &.is-active {\n        display: block;\n      }\n    }\n  }\n}\n","// CrÃ©ditos: https://dev.to/meduzen/write-css-variables-faster-in-scss-1mon\n@function v($var, $fallback: null) {\n  @if ($fallback) {\n    @return var(--#{$var}, #{$fallback});\n  } @else {\n    @return var(--#{$var});\n  }\n}\n","@import '../base';\n@import 'tabs';\n","// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @return if($n != null and $n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n  $min: map-get($breakpoints, $name);\n  @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width. Null for the largest (last) breakpoint.\n// The maximum value is calculated as the minimum of the next one less 0.02px\n// to work around the limitations of `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n  $next: breakpoint-next($name, $breakpoints);\n  @return if($next, breakpoint-min($next, $breakpoints) - .02, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  $max: breakpoint-max($name, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($name, $breakpoints) {\n      @content;\n    }\n  }\n}\n"],"sourceRoot":""}